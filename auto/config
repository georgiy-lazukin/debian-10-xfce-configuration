#!/bin/bash

set -e

echo 'https://live-team.pages.debian.net/live-manual/html/live-manual/customizing-package-installation.en.html'


# Skeleton
echo 'Add archives, packages, hooks ...'

mkdir -p ./config/{archives,'includes.chroot','hooks','includes.binary','packages.chroot','package-lists'}
cp -a ./skel/archives/. ./config/archives/
cp -a ./skel/hooks/. ./config/hooks/
cp -a ./skel/includes.chroot/. ./config/includes.chroot/
cp -a ./skel/package-lists/. ./config/package-lists/


# Non-free firmware
# Download http://gensho.ftp.acc.umu.se/cdimage/unofficial/non-free/firmware/buster/current/firmware.tar.gz and place into config/includes.binary/firmware.tar.gz
mkdir -p config/includes.binary/firmware && rm -fr config/includes.binary/firmware/*
wget -c http://gensho.ftp.acc.umu.se/cdimage/unofficial/non-free/firmware/buster/current/firmware.tar.gz -O - | sudo tar -xz -C config/includes.binary/firmware/


# Download packages
echo 'Download packages...'
echo 'Packages must be named in the prescribed way. One simple way to do this is to use dpkg-name'

# download google-chrome
url="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
filename="config/packages.chroot/google-chrome-stable_current_amd64.deb"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download slack
url="https://downloads.slack-edge.com/linux_releases/slack-desktop-4.7.0-amd64.deb"
filename="config/packages.chroot/slack-desktop_4.7.0_amd64.deb"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download zoom
url="https://zoom.us/client/latest/zoom_amd64.deb"
filename="config/packages.chroot/zoom_amd64.deb"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download php-storm
mkdir -p skel/includes.chroot/opt/PhpStorm
url="https://download-cf.jetbrains.com/webide/PhpStorm-2020.2.tar.gz"
filename="skel/includes.chroot/opt/PhpStorm/PhpStorm-2020.2.tar.gz"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download balena-etcher
url="https://github.com/balena-io/etcher/releases/download/v1.5.101/balena-etcher-electron_1.5.101_amd64.deb"
filename="config/packages.chroot/balena-etcher-electron_1.5.101_amd64.deb"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download teamviewer
url="https://download.teamviewer.com/download/linux/teamviewer_amd64.deb"
filename="config/packages.chroot/teamviewer_amd64.deb"
[[ ! -f $filename ]] && \
  wget $url -O $filename

# download postman
url="https://dl.pstmn.io/download/latest/linux64"
mkdir -p skel/includes.chroot/opt/Postman
filename="skel/includes.chroot/opt/Postman/Postman-linux-x64.tar.gz"
[[ ! -f $filename ]] && \
  wget $url -O $filename


# Config
lb config noauto \
  --binary-images iso-hybrid \
  --mode debian \
  --architectures amd64 \
  --interactive shell \
  --linux-flavours amd64 \
  --distribution buster \
  --archive-areas "main contrib non-free" \
  --updates true \
  --security true \
  --cache true \
  --apt-recommends true \
  --debian-installer live \
  --debian-installer-gui true \
  --win32-loader false \
  --iso-application green-debian \
  --iso-volume green-debian \
  --debootstrap-options "--include=apt-transport-https,ca-certificates,openssl" \
  --bootappend-live "\
      boot=live components \
      username=green \
      locales=en_GB.UTF-8,ru_RU.UTF-8 \
      keyboard-layouts=en,ru \
      utc=no \
      timezone=Europe/Moscow \
      live-config.user-default-groups=audio cdrom dip floppy video plugdev netdev powerdev scanner bluetooth fuse docker vboxusers \
  "\
"${@}"
